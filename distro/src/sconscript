# Search these directories for libraries to include.
# '#' indicates the directory that scons is executed in.
# TODO: pkg-config for boost?

# Import the environment from parent class
Import('env')

include_path =                     \
    '#/src/common:'                \
   +'#/src/console:'               \
   +'#/src/database:'              \
   +'#/src/graphicsEngine:'        \
   +'#/src/gui:'                   \
   +'#/src/main:'                  \
   +'#/src/map:'                   \
   +'#/src/model:'                 \
   +'/usr/include/SDL:'            \
   +'/usr/include/python2.7:'

# List of Objects to Compile
objects = [
'./console/Console.cpp',
'./console/ConsolePython.cpp',
'./database/QueryGenerator.cpp',
'./database/GrassTile.cpp',
'./database/RowSet.cpp',
'./database/RectHardpoint.cpp',
'./database/MapObjectFactory.cpp',
'./database/MapObject.cpp',
'./database/NonPlayerCharacter.cpp',
'./database/CharacterMapObject.cpp',
'./database/WaterTile.cpp',
'./database/Database.cpp',
'./database/CircHardpoint.cpp',
'./database/Container.cpp',
'./database/DesertTile.cpp',
'./database/Tile.cpp',
'./database/DrawableFactory.cpp',
'./database/AnimationInteraction.cpp',
'./database/ItemInteraction.cpp',
'./database/DialogInteraction.cpp',
'./database/RectInteractionpoint.cpp',
'./database/CircInteractionpoint.cpp',
'./graphicsEngine/GraphicsEngine.cpp',
'./graphicsEngine/Animation.cpp',
'./graphicsEngine/Drawable.cpp',
'./graphicsEngine/Layer.cpp',
'./graphicsEngine/RectBlitter.cpp',
'./graphicsEngine/Screen.cpp',
'./gui/Box.cpp',
'./gui/GuiFactory.cpp',
'./gui/Dialog.cpp',
'./gui/ResourceLoader.cpp',
'./gui/Theme.cpp',
'./map/Map.cpp',
'./model/GamerInventory.cpp',
'./model/Inventory.cpp',
'./model/Item.cpp',
'./common/EventHandler.cpp',
'./common/Asgard.cpp',
#'./database/test.cpp'
#'./graphicsEngine/test.cpp'
#'./model/test.cpp'
'./main/main.cpp'
]

if ARGUMENTS.get('VERBOSE') != "1":
	env['CXXCOMSTR'] = "[CC] $TARGET"
	env['LINKCOMSTR'] = "[LK] $TARGET"


# Construct list of Library to Link Against
libarr=['sqlite3','SDL','SDL_image','SDL_ttf','python2.7','glog']

# Attempt to find boost_thread
# TODO: It'd be great to drop boost dependency here by using C++11's threads
# instead. 
conf = Configure(env)
if (conf.CheckLib("boost_thread")):
   libarr.append("boost_thread")
elif (conf.CheckLib("boost_thread-mt")):
   libarr.append("boost_thread-mt")
else:
   print "Failed to find a Boost Thread library."
   Exit(1)

asgard = env.Program('../asgard', objects, CPPPATH=include_path, LIBS=libarr, CXXFLAGS=['-Wall', '-O2'])
Export("asgard")
